// /services/financeService.js
// Certifique-se de ter o axios instalado: npm install axios
const axios = require('axios');

async function obterCotacaoAtualizada() {
    try {
        // Solicita as cotaÃ§Ãµes de USD, EUR, CAD, ARS, PYG para BRL
        const { data } = await axios.get('https://economia.awesomeapi.com.br/json/last/USD-BRL,EUR-BRL,CAD-BRL,ARS-BRL,PYG-BRL');

        if (!data.USDBRL || !data.EURBRL || !data.CADBRL || !data.ARSBRL || !data.PYGBRL) {
            console.error("[COTAÃ‡ÃƒO ERRO] API nÃ£o retornou todos os pares de moeda esperados.");
            return "ðŸ¦œ Desculpe, tive um probleminha para buscar algumas cotaÃ§Ãµes no momento. Tente de novo mais tarde!";
        }

        const usdBrltxt = parseFloat(data.USDBRL.bid).toFixed(2);
        const eurBrltxt = parseFloat(data.EURBRL.bid).toFixed(2);
        const cadBrltxt = parseFloat(data.CADBRL.bid).toFixed(2);
        const arsBrltxt = parseFloat(data.ARSBRL.bid).toFixed(4);
        const pygBrltxt = parseFloat(data.PYGBRL.bid).toFixed(5);

        return `ðŸª™ **CotaÃ§Ãµes de Hoje** (valor de 1 unidade da moeda em Reais):\n` +
            `-------------------------------------\n` +
            `ðŸ‡ºðŸ‡¸ 1 DÃ³lar Americano (USD): R$ ${usdBrltxt}\n` +
            `ðŸ‡ªðŸ‡º 1 Euro (EUR): R$ ${eurBrltxt}\n` +
            `ðŸ‡¨ðŸ‡¦ 1 DÃ³lar Canadense (CAD): R$ ${cadBrltxt}\n` +
            `ðŸ‡¦ðŸ‡· 1 Peso Argentino (ARS): R$ ${arsBrltxt}\n` +
            `ðŸ‡µðŸ‡¾ 1 Guarani Paraguaio (PYG): R$ ${pygBrltxt}\n` +
            `-------------------------------------\n` +
            `Lembre-se que estes sÃ£o valores de referÃªncia e podem variar um pouco em casas de cÃ¢mbio. Para valores exatos, Ã© sempre bom confirmar antes! ðŸ˜‰`;

    } catch (err) {
        console.error("[COTAÃ‡ÃƒO ERRO] Erro ao buscar cotaÃ§Ã£o atualizada:", err.message);
        return "ðŸ¦œ Desculpe, nÃ£o consegui buscar as cotaÃ§Ãµes no momento. Por favor, tente novamente em alguns instantes!";
    }
}

module.exports = { obterCotacaoAtualizada };